Arrays

# 1.
print '\n 1.'
A = np.random.randint(0,high=100,size=(3,3))
a = np.random.randint(0,high=100,size=(3,1))
b = np.random.randint(0,high=100,size=(3,1))
print 'A = \n', A
print 'a = \n', a
print 'b = \n', b

# 2.
print '\n 2.'
c = 3*a
print 'c = \n', c

# 3.
print '\n 3.'
print 'element-element product:', a*b

# 4. 
print '\n 4.'
print 'Entry 1,2: \n', A[1,2]
print A
print 'Second column: \n', A[:3,1]
print 'Top left minor array: \n', A[0:2, 0:2]

# 5. 
print '\n 5.'
#print A
#print A[:3,1]=b

# 6. 
print '\n 6.'
print 'A = \n', A
print 'row 2, column 1:\n', A[1,0]
print 'row 3, all columns:\n', A[2,:]
print 'rows 2,3 columns 2,3:\n', A[1:2,1:2]

# 7. 
print '\n 7.'
print np.dot(A,b)

# 8. 
print '\n 8.'
B = np.hstack([b,b,b])
print B

# 9. 
print '\n 9.'
C = A*B
print C

# 10. 
print '\n 10.'
Cr, Cc = np.shape(C)
print 'Cr = ', Cr
print 'Cc = ', Cc

# 11. 
print '\n 11.'

# 12. 
print '\n 12.'

# 13. 
print '\n 13.'

# 14. 
print '\n 14.'

# 15. 
print '\n 15.'
Q = np.random.randint(0,high=100,size=(24,3))
print Q

# 16. 
print '\n 16.'
Qmax = np.max(Q)
Qmin = np.min(Q)
Qmean = np.mean(Q)
Qstd = np.std(Q)
print Qmax
print Qmin
print Qmean
print Qstd




Functions

1.
def sum(numbers):
    total = 0
    for x in numbers:
        total += x
    return total
print(sum((8, 2, 3, 0, 7)))

2.

def test_range(n):
    if n in range(3,9):
        print( " %s is in the range"%str(n))
    else :
        print("The number is outside the given range.")
test_range(5)